(defvar bar-element-height 15)

(defpoll time :interval "10s"
  "date '+%H:%M'")

(defpoll language :interval "100ms"
  "xkblayout-state print \"%s\"")

(defpoll charging :interval "30s"
  "upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep state | sed 's/[ :%]//g'")

(defpoll power :interval "30s"
  "upower -i /org/freedesktop/UPower/devices/battery_BAT0 | grep percentage | sed 's/[a-z :%]//g'")

(deflisten music_author :interval "5s"
  "playerctl --follow metadata --format '{{ artist }}'")

(deflisten music_title :interval "5s"
  "playerctl --follow metadata --format '{{ title }}'")
; (deflisten music_author :initial ""
;   "playerctl --follow metadata --format '{{ artist }}'")
;
; (deflisten music_title :initial ""
;   "playerctl --follow metadata --format '{{ title }}'")



(defwidget wbar_time []
  (box :class "wbar_time"
       :space-evenly false
    (label :text "   ")
    (image :path "icons/clock.png"
           :image-height bar-element-height)
    (label :text "  ${time}   ")))

(defwindow bar_time
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "-12"
                      :y "12"
                      :width 88
                      :height "32"
                      :anchor "top right")
  :reserve (struts :side "top" :distance "44")
  (wbar_time))



(defwidget wbar_language []
  (box :class "wbar_language"
       :spacing 10
       :space-evenly false
    (label)
    (button :onclick "xkb-switch -n"
      (image :path {language == "us" ? "icons/usa_flag.png" : "icons/russia_flag.png"}
             :image-height bar-element-height))
    (label)))

(defwindow bar_language
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "-112"
                      :y "12"
                      :width 42
                      :height "32"
                      :anchor "top right")
  :reserve (struts :side "top" :distance "44")
  (box
       :space-evenly false
    (wbar_language)))



(defwidget wbar_power []
  (box :class "wbar_language"
       :spacing 10
       :space-evenly false
    (image :path {charging == "statecharging" ? "icons/batzar.png" : charging == "statefully-charged" ? "icons/batzarfull.png" : power > 80 ? "icons/bat100.png" : power > 60 ? "icons/bat80.png" : power > 40 ? "icons/bat60.png" : power > 20 ? "icons/bat40.png" : power > 10 ? "icons/bat20.png" : "icons/bat10.png"}
           :image-height {bar-element-height})))

(defwidget wbar_bluetooth []
  (box :class "wbar_bluetooth"
       :spacing 10
       :space-evenly false
    (image :path "icons/bluetooth_active.png"
           :image-height {bar-element-height + 2})))

(defwidget wbar_wifi []
  (box :class "wbar_wifi"
       :spacing 10
       :space-evenly false
    (image :path "icons/wifi3.png"
           :image-height {bar-element-height})))

(defwindow bar_power_bluetooth
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "-166"
                      :y "12"
                      :height "32"
                      :anchor "top right")
  :reserve (struts :side "top" :distance "44")
  (box
       :space-evenly false
       :spacing 10
    (label)
    (wbar_wifi)
    (wbar_bluetooth)
    (wbar_power)
    (label)))



(defwidget wbar_music_author []
  (box :class "wbar_music_author"
    (label :text "${music_author}")))

(defwidget wbar_music_separator []
  (box :class "wbar_music_separator"
    (label :text "-")))

(defwidget wbar_music_title []
  (box :class "wbar_music_title"
    (label :text "${music_title}")))

(defwindow bar_music
  :monitor 1
  :windowtype "normal"
  :wm-ignore true
  :stacking "bg"
  :geometry (geometry :x "255"
                      :y "12"
                      :width "1"
                      :height "32"
                      :anchor "top left")
  :reserve (struts :side "top" :distance "44")
  (box
       :space-evenly false
       :spacing 10
    (label)
    (image :path "icons/spotify.png"
           :image-height {bar-element-height + 2})
    (wbar_music_author)
    (wbar_music_separator)
    (wbar_music_title)
    (label)))


(defwindow bar_music2
  :monitor 1
  :windowtype "normal"
  :wm-ignore true
  :stacking "bg"
  :geometry (geometry :x "255"
                      :y "12"
                      :width "1"
                      :height "32"
                      :anchor "top left")
  :reserve (struts :side "top" :distance "44")
  (box
       :space-evenly false
       :spacing 10
    (label)
    (image :path "icons/spotify.png"
           :image-height {bar-element-height + 2})
    (wbar_music_author)
    (wbar_music_separator)
    (wbar_music_title)
    (label)))



(defvar variable_containing_yuck
  "
  (wbar_music_title)
  ")

(defwidget wbar_workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 15
    (button :onclick "wmctrl -s 9" 1)
    (button :onclick "wmctrl -s 10" 2)
    (button :onclick "wmctrl -s 11" 3)
    (button :onclick "wmctrl -s 12" 4)
    (button :onclick "wmctrl -s 13" 5)
    (button :onclick "wmctrl -s 14" 6)
    (button :onclick "wmctrl -s 15" 7)
    (button :onclick "wmctrl -s 16" 8)
    (button :onclick "wmctrl -s 17" 9)))


(defwindow bar_workspaces
  :monitor 1
  :windowtype "dock"
  :geometry (geometry :x "12"
                      :y "12"
                      :height "32"
                      :width "231px"
                      :anchor "top left")
  :reserve (struts :side "top" :distance "44")
  (box
       :space-evenly false
       :spacing 15
    (label)
    (wbar_workspaces)
    (label)))


